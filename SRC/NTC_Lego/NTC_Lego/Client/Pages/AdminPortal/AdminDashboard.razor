@page "/dashboard"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject CurrentPage currentPage
@using NTC_Lego.Shared;

@attribute [Authorize(Roles = "Admin")]
<PageTitle>Admin Dashboard</PageTitle>

<div class="container">
    <div class="dash-summary">
        <div class="card summary-card">
            <svg width="70" height="70" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M20.5 20.5H53.6577C55.6094 20.5 57.0415 22.3342 56.5681 24.2276L52.5681 40.2276C52.2342 41.5631 51.0343 42.5 49.6577 42.5H23.1187C21.6185 42.5 20.3489 41.3918 20.1462 39.9053L17.6002 21.2349C17.5344 20.7522 17.352 20.2929 17.0689 19.8965L15.395 17.553C15.1471 17.2059 14.7469 17 14.3205 17V17C13.5912 17 13 17.5912 13 18.3205V19" stroke="black" stroke-width="2" stroke-linecap="round" />
                <circle cx="28.5" cy="48.5" r="3" stroke="black" stroke-width="2" />
                <circle cx="42.5" cy="48.5" r="3" stroke="black" stroke-width="2" />
            </svg>
            <div class="card-numbers">
                <span>Total Sales</span>
                @if (allSaleOrders == null)
                {
                    <span>Total loading...</span>
                }
                else
                {
                    <span>$@allSaleOrders</span>
                }
            </div>
        </div>
        <div class="card summary-card">
            <svg width="70" height="70" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M20.5 20.5H53.6577C55.6094 20.5 57.0415 22.3342 56.5681 24.2276L52.5681 40.2276C52.2342 41.5631 51.0343 42.5 49.6577 42.5H23.1187C21.6185 42.5 20.3489 41.3918 20.1462 39.9053L17.6002 21.2349C17.5344 20.7522 17.352 20.2929 17.0689 19.8965L15.395 17.553C15.1471 17.2059 14.7469 17 14.3205 17V17C13.5912 17 13 17.5912 13 18.3205V19" stroke="black" stroke-width="2" stroke-linecap="round" />
                <circle cx="28.5" cy="48.5" r="3" stroke="black" stroke-width="2" />
                <circle cx="42.5" cy="48.5" r="3" stroke="black" stroke-width="2" />
                <line x1="54.5" y1="15.5" x2="62.5" y2="15.5" stroke="black" stroke-linecap="round" />
                <line x1="58.5" y1="11.5" x2="58.5" y2="19.5" stroke="black" stroke-linecap="round" />
            </svg>
            <div class="card-numbers">
                <span>Total Purchases</span>
                @if (allPurchaseOrders == null)
                {
                    <span>Total loading...</span>
                }
                else
                {
                    <span>$@allPurchaseOrders</span>
                }
            </div>
        </div>
        <!--<div class="card summary-card">
            <svg width="70" height="70" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18.3983 30H51.6017C52.8046 30 53.7354 31.0544 53.5862 32.2481L51.3362 50.2481C51.2111 51.2489 50.3603 52 49.3517 52H20.6483C19.6397 52 18.7889 51.2489 18.6638 50.2481L16.4138 32.2481C16.2646 31.0544 17.1954 30 18.3983 30Z" stroke="black" stroke-width="2" />
                <line x1="35" y1="36" x2="35" y2="46" stroke="black" stroke-width="2" stroke-linecap="round" />
                <line x1="44.9135" y1="36.0796" x2="44.0796" y2="46.0865" stroke="black" stroke-width="2" stroke-linecap="round" />
                <line x1="25.0796" y1="35.9135" x2="25.9135" y2="45.9204" stroke="black" stroke-width="2" stroke-linecap="round" />
                <path d="M17.2317 29.8127L19.6433 18.5587C19.7421 18.0977 20.1495 17.7683 20.6211 17.7683L23 17.7683" stroke="black" stroke-width="2" stroke-linecap="round" />
                <path d="M52.7683 29.6974L50.3567 18.4435C50.2579 17.9824 49.8505 17.653 49.3789 17.653L47 17.653" stroke="black" stroke-width="2" stroke-linecap="round" />
            </svg>
            <div class="card-numbers">
                <span>Sales Return</span>
                <span>$1111</span>
            </div>
        </div>
        <div class="card summary-card">
            <svg width="70" height="70" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect x="12" y="24" width="46" height="22" rx="2" stroke="black" stroke-width="2" />
                <circle cx="35" cy="35" r="7.25" stroke="black" stroke-width="1.5" />
                <path d="M34.54 39.99H35.07V39.11C36.38 39.01 37.21 38.24 37.21 37.09C37.21 36.13 36.64 35.5 35.51 35.22L35.07 35.11V32.36C35.84 32.44 36.3 32.88 36.37 33.63H37.09C36.99 32.5 36.23 31.8 35.07 31.72V30.85H34.54V31.72C33.27 31.82 32.44 32.59 32.44 33.7C32.44 34.68 33.03 35.31 34.15 35.58L34.54 35.68V38.46C33.68 38.39 33.13 37.92 33.09 37.22H32.35C32.43 38.32 33.28 39.04 34.54 39.11V39.99ZM34.28 34.92C33.52 34.73 33.15 34.32 33.15 33.69C33.15 32.96 33.69 32.46 34.54 32.37V34.98L34.28 34.92ZM35.36 35.88C36.13 36.06 36.5 36.48 36.5 37.13C36.5 37.87 35.95 38.37 35.07 38.46V35.81L35.36 35.88Z" fill="black" />
                <line x1="54.5" y1="27.5" x2="50.5" y2="27.5" stroke="black" stroke-linecap="round" />
                <line x1="19.5" y1="42.5" x2="15.5" y2="42.5" stroke="black" stroke-linecap="round" />
            </svg>

            <div class="card-numbers">
                <span>Purchases Return</span>
                <span>$1111</span>
            </div>
        </div>-->
    </div>

    <div class="table-container">
        @if (inventories == null)
        {
            <span>Inventory loading...</span>
        }
        else
        {
            <!-- Data Table -->
            <h3>Recent Inventory</h3>
            <table class="table table-striped border">
                <thead class="table-dark">
                    <tr class="text-center">
                        <th scope="col">ID</th>
                        <th scope="col">Item</th>
                        <th scope="col">Color</th>
                        <th scope="col">Total Quantity</th>
                        <th scope="col">List Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var inventory in inventories)
                    {
                        <tr class="text-center">
                            <td>@inventory.InventoryId</td>
                            <td>@inventory.ItemId</td>
                            <td>@inventory.Color.ColorName</td>
                            <td>@inventory.QuantityTotal</td>
                            <td>$@inventory.InventoryItemPrice</td>
                        </tr>

                    }
                </tbody>
            </table>
        }
    </div>

    <div class="table-container">
        @if (saleOrders == null)
        {
            <span>Sales loading...</span>
        }
        else
        {
            <h3>Recent Sales</h3>
            <table class="table table-striped border">
                <thead class="table-dark">
                    <tr class="text-center">
                        <th scope="col">ID</th>
                        <th scope="col">Total</th>
                        <th scope="col">Date</th>
                        <th scope="col">Status</th>
                        <th scope="col">User</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var sale in saleOrders)
                    {
                        <tr class="text-center">
                            <td>@sale.SaleOrderId</td>
                            <td>$@sale.SaleOrderTotalPrice</td>
                            <td>@sale.SaleOrderDate</td>
                            <td>@sale.OrderStatus</td>
                            <td>@sale.User.UserName</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <div class="table-container">
        <!-- Purchase Order table -->
        @if (purchaseOrders == null)
        {
            <span>Purchase Orders loading...</span>
        }
        else
        {
            <!-- Data Table -->
            <h3>Recent Purchases</h3>
            <table class="table table-striped border">
                <thead class="table-dark">
                    <tr class="text-center">
                        <th scope="col">ID</th>
                        <th scope="col">Total</th>
                        <th scope="col">Date</th>
                        <th scope="col">Status</th>
                        <th scope="col">Supplier</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var purchase in purchaseOrders)
                    {
                        <tr class="text-center">
                            <td>@purchase.PurchaseOrderId</td>
                            <td>$@purchase.PurchaseOrderTotalPrice</td>
                            <td>@purchase.PurchaseOrderDate</td>
                            <td>@purchase.OrderStatus</td>
                            <td>@purchase.Supplier.SupplierName</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

</div>

@code {
    private IEnumerable<InventoryVM>? inventories;
    private IEnumerable<SaleOrderVM>? saleOrders;
    private IEnumerable<PurchaseOrderVM>? purchaseOrders;
    private decimal allSaleOrders;
    private decimal allPurchaseOrders;

    protected override async Task OnInitializedAsync()
    {
        await LoadPage();
    }

    protected async Task LoadPage()
    {
        inventories = await Http.GetFromJsonAsync<List<InventoryVM>>($"/Inventory/inventory-recent?");
        saleOrders = await Http.GetFromJsonAsync<List<SaleOrderVM>>($"/Admin/sales-recent?");
        purchaseOrders = await Http.GetFromJsonAsync<List<PurchaseOrderVM>>($"/Purchase/purchases-recent?");
    }

    protected async Task LoadAllPages()
    {
        allSaleOrders = await Http.GetFromJsonAsync<decimal>($"/Admin/allsales?");
        allPurchaseOrders = await Http.GetFromJsonAsync<decimal>($"/Admin/allpurchases?");
    }

    protected async override void OnInitialized()
    {
        await LoadAllPages();
        currentPage.SetCurrentPageName("Dashboard");
        base.OnInitialized();
    }

    void ChangeName() => currentPage.SetCurrentPageName("Name changed");
}
